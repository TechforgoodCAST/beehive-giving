= simple_form_for [recipient, model], url: signup_proposal_path, method: :post do |f|
  .uk-form.uk-form-stacked.form

    h3 Requirements

    .uk-width-medium-1-2.uk-margin-top
      .label What type of support are you seeking?
      = f.input :type_of_support, collection: Proposal::TYPE_OF_SUPPORT, input_html: { class: 'large uk-width-medium-1-1' }
      = f.error :type_of_support, class: 'error-message'

    .uk-width-medium-1-2.uk-margin-top
      .label How long do you require funding for?
      = f.input :funding_duration, as: :month, input_html: { class: 'numeric integer large', min: 0 }, placeholder: 'e.g. 12'
      = f.error :funding_duration, class: 'error-message'

    .uk-width-medium-1-2.uk-margin-top
      .label What type of funding are you seeking?
      = f.input :funding_type, collection: Proposal::FUNDING_TYPE, input_html: { class: 'large uk-width-medium-1-1' }
      = f.error :funding_type, class: 'error-message'

    .uk-width-medium-1-1.uk-margin-top
      .label How much funding are you seeking?
      .uk-grid
        .uk-width-medium-1-2
          = f.input :total_costs, as: :currency, input_html: { class: 'numeric integer uk-width-1-1 large', min: 0 }, placeholder: 'e.g. 1234'
          = f.error :total_costs, class: 'error-message'
        .uk-display-block.boolean-padding
          = f.input :total_costs_estimated, as: :boolean, inline_label: 'Are these estimated figures?'

    .uk-width-medium-1-1.uk-margin-top
      .label Is this all of the funding required for the proposed work?
      = f.input :all_funding_required, as: :radio_buttons
      = f.error :all_funding_required, class: 'error-message'

    hr.thick

    h3 Beneficiaries

    .label Who or what will your proposed work affect?
    .uk-width-1-1.uk-margin-top
      .label People
      = f.input :affect_people, as: :radio_buttons, input_html: { class: 'large uk-width-1-1' }
      = f.error :affect_people, class: 'error-message error-margin', id: 'people-error'

      #people-options class=hidden(affect_people)

        .label.question-padding Which genders?
        .question-padding
          = f.input :gender, collection: Profile::GENDERS, input_html: { class: 'large uk-width-1-1' }
          = f.error :gender, class: 'error-message'

        hr

        .label.question-padding Which age groups?
        #age_groups
          = f.association :age_groups, as: :check_boxes, label_method: :label, value_method: :id

        hr

        .label.question-padding Which types of people?
        small.question-padding Select as many as applicable.
        #people= f.association :beneficiaries, as: :check_boxes, collection: filter_beneficiaries('People'), label_method: :label, value_method: :id

    .uk-width-1-1.uk-margin-top
      .label Other (not people)
      .question-padding
        = f.input :affect_other, as: :radio_buttons, input_html: { class: 'large uk-width-1-1' }
        = f.error :affect_other, class: 'error-message error-margin', id: 'other-error'

      #other-options class=hidden(affect_other)
        small.question-padding Select as many as applicable.
        #other= f.association :beneficiaries, as: :check_boxes, collection: filter_beneficiaries('Other'), label_method: :label, value_method: :id
        .uk-width-medium-1-2
          .checkbox.wide
            = f.input :beneficiaries_other_required, as: :boolean, inline_label: 'Other', input_html: { class: 'toggle-other' }
          .other.uk-hidden
            = f.input :beneficiaries_other, input_html: { class: 'large other uk-width-medium-1-1' }
            = f.error :beneficiaries_other, class: 'error-message other'

    hr.thick

    h3 Location

    .label Where will your proposed work affect?
    = f.input :affect_geo, as: :radio_buttons, collection: Proposal::AFFECT_GEO
    = f.error :affect_geo, class: 'error-message'

    .uk-width-1-1.uk-margin-top.districts class=hidden(within_country)
      .label Please select all of the areas your proposed work will affect
      .muted You can expand each region to select individual areas, or check the box next to a regions name to select all the areas. Remember, the more specific you are the better your results will be.
      a data-uk-tooltip="{pos:'top'}" title="Please select 'Across many countries' and pick the countries you affect."
        small Affect regions in a different country?
      / TODO: refactor
      = f.association :districts do
        = f.select :district_ids, @district_ids, {}, { multiple: true, class: ('field_with_errors' unless f.object.errors.any? && f.object.districts.present?) }
      - if f.object.errors.any? && (f.object.affect_geo == 0 || f.object.affect_geo == 1)
        .field_with_errors
        = f.error :districts, class: 'error-message'

    .uk-width-1-1.uk-margin-top.country class=hidden(entire_country) style= 'padding: 0 10px;'
      | Your work will affect all of
      strong<
        = @recipient_country.name
      | .
      .muted
        | To change country plese select
        strong<> 'Across many countries'
        | above.

    .uk-width-1-1.uk-margin-top.countries class=hidden(multiple_countries)
      .label Please select the countries your proposed work will affect
      / TODO: refactor
      = f.association :countries, collection: Country.order('priority DESC'), input_html: { class: 'country_field chosen-select large' }
      = f.error :countries, class: 'error-message'

    hr.thick

    h3 Privacy

    .uk-width-medium-1-1.uk-margin-top
      .label Make this funding proposal visible to funders?
      .muted By selecting 'Yes', details of your funding proposal will be made discoverable to funders using Beehive. Selecting 'No' will not affect your recommendations, and you can easily change this later.
      = f.input :private, as: :radio_buttons, collection: [['Yes', false],['No', true]]
      = f.error :private, class: 'error-message'

    = f.button :button, 'Save and recommend funders', class: 'uk-button uk-button-primary uk-margin-top uk-button-large uk-width-medium-1-2 uk-float-right', data: {disable_with: "<i style='color: #fff;' class='uk-icon uk-icon-circle-o-notch uk-icon-spin'></i><span style='color: #fff;'> That wasn't so bad...</span>"}
