.uk-grid
  .uk-width-medium-1-1
    .uk-form-controls
      = f.error :recipient, class: 'uk-text-small uk-text-warning'
      %label.uk-form-label What problem is your organisation solving?
      = f.input :problem, type: 'text', input_html: { class: 'uk-width-1-1' }
      .uk-text-small.uk-text-muted#problem_char_count

      -# refactor
      :javascript
        function pluralize_characters(num) {
          if(num == 1) {
            return num + " character";
          } else {
            return num + " characters";
          }
        }

        $("#problem_char_count").text((1000 - $("#recipient_attribute_problem").val().length) + " characters left")

        $("#recipient_attribute_problem").keyup(function() {
          var chars = $("#recipient_attribute_problem").val().length;
          var left = 1000 - chars;
          if(left >= 0) {
            $("#problem_char_count").text(pluralize_characters(left) + " left");
          } else {
            left = left * (-1)
            $("#problem_char_count").text(pluralize_characters(left) + " too long");
          }
        });

      = f.error :problem, class: 'uk-text-small uk-text-warning'

  .uk-width-medium-1-1.uk-margin-top
    .uk-form-controls
      %label.uk-form-label What is your organisations solution?
      = f.input :solution, as: :text, error: false, type: 'text', input_html: { class: 'uk-width-1-1' }
      .uk-text-small.uk-text-muted#solution_char_count

      -# refactor
      :javascript
        function pluralize_characters(num) {
          if(num == 1) {
            return num + " character";
          } else {
            return num + " characters";
          }
        }

        $("#solution_char_count").text((1000 - $("#recipient_attribute_solution").val().length) + " characters left")

        $("#recipient_attribute_solution").keyup(function() {
          var chars = $("#recipient_attribute_solution").val().length;
          var left = 1000 - chars;
          if(left >= 0) {
            $("#solution_char_count").text(pluralize_characters(left) + " left");
          } else {
            left = left * (-1)
            $("#solution_char_count").text(pluralize_characters(left) + " too long");
          }
        });


      = f.error :solution, class: 'uk-text-small uk-text-warning'
  .uk-width-medium-1-1.uk-margin-top
    = f.submit 'Save', class: 'uk-button uk-button-primary uk-width-1-1', style: 'color: #fff;'
