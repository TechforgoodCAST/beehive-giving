= content_for :title, 'Funds'

- if @proposal # TODO: refactor
  :javascript
    mixpanel.track('View Funds Page');
    mixpanel.identify("#{@current_user.id}");
    mixpanel.people.set({
      'Fund Unlocks': "#{@recipient.funds_checked}",
    });

    ga("send", "event", "Eligibility", "Eligible", "#{@proposal.eligible_funds.count}");
    ga("send", "event", "Eligibility", "Ineligible", "#{@proposal.ineligible_funds.count}");

/ Google Code for View recommended funds
:javascript
  /* <![CDATA[ */
  var google_conversion_id = 937505505;
  var google_conversion_language = "en";
  var google_conversion_format = "3";
  var google_conversion_color = "ffffff";
  var google_conversion_label = "LPzOCKWprGMQ4eWEvwM";
  var google_remarketing_only = false;
  /* ]]> */
%script{ src: "//www.googleadservices.com/pagead/conversion.js", type: "text/javascript" }
%noscript
  %div{ style: "display:inline;" }
    %img{ alt: "", height: "1", src: "//www.googleadservices.com/pagead/conversion/937505505/?label=LPzOCKWprGMQ4eWEvwM&amp;guid=ON&amp;script=0", style: "border-style:none;", width: "1" }

%header
  = cell :v2_navbar, @current_user
  = cell :breadcrumb, (@proposal ? 'Current proposal' : nil) => nil, 'Funds' => funds_path(@proposal)

  .maxw1080.mx-auto.px20
    .px20.md
      = cell(:terms_notice, @current_user)

%main
  .maxw1080.mx-auto.px20.flex.flex-wrap
    %section.perc50.md.px20.mb40
      .rounded.border.border-mist
        = cell(:current_proposal, @proposal)
    %section.perc50.md.px20.mb40
      .rounded.border.border-mist
        .p20
          .flex.justify-between.mb10
            %h5.bold Filter by
            = link_to 'Clear all filters', funds_path(@proposal), class: 'fs15'
          = cell(:filter, params, funding_duration: @proposal&.funding_duration)

    %aside.perc25.md.px20.mb40
      = render partial: 'sidebar'

    %section.perc75.md.mb80.px20
      %h1.mb10 Funds

      .flex.justify-between.mb40
        .night
          = pluralize(@fund_count, 'fund')
          of
          = Fund.active.size

        %form.filter
          Sort:
          %select#sort
            %option{ value: 'eligibility' } Eligibility
            %option{ value: 'name', selected: (params[:sort] == 'name') } Name

      - @funds.each do |fund|
        - if policy(FundContext.new(fund, @proposal)).show?
          = render(partial: 'fund', locals: { fund: fund })
        - else
          = render(partial: 'fund_redacted', locals: { fund: fund })

      = paginate @funds
