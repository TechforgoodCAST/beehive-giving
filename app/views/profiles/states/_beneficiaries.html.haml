= content_for :title, 'Target'

= simple_form_for [@recipient, @profile], method: :post, remote: true do |f|
  .uk-form.uk-form-stacked.form
    .uk-width-1-1
      .label Do you affect people?
      = f.input :affect_people, as: :radio_buttons, input_html: { class: 'large uk-width-1-1' }
      = f.error :affect_people, class: 'error-message error-margin', id: 'people-error'

      #people-options{class: ('uk-hidden' unless @profile.affect_people?)}

        .label.question-padding Which genders do you affect?
        .question-padding
          = f.input :gender, collection: Profile::GENDERS, input_html: { class: 'large uk-width-1-1' }
          = f.error :gender, class: 'error-message'

        %hr

        .label.question-padding Which age groups do you affect?
        #age_groups
          = f.association :age_groups, as: :check_boxes, label_method: :label, value_method: :id
          -# = f.error :age_groups, class: 'error-message error-margin'

        %hr

        .label.question-padding Which types of people do you affect?
        %small.question-padding Select as many as applicable.
        #people= f.association :beneficiaries, as: :check_boxes, collection: Beneficiary.order(:sort).where(category: 'People'), label_method: :label, value_method: :id

    .uk-width-1-1.uk-margin-top
      .label Do you affect any other groups (not people)?
      .question-padding
        = f.input :affect_other, as: :radio_buttons, input_html: { class: 'large uk-width-1-1' }
        = f.error :affect_other, class: 'error-message error-margin', id: 'other-error'

      #other-options{class: ('uk-hidden' unless @profile.affect_other?)}
        %small.question-padding Select as many as applicable.
        #other= f.association :beneficiaries, as: :check_boxes, collection: Beneficiary.order(:sort).where(category: 'Other'), label_method: :label, value_method: :id
        .uk-width-medium-1-2
          .checkbox.wide= f.input :beneficiaries_other_required, as: :boolean, inline_label: 'Other', input_html: { class: 'toggle-other' }
          .other.uk-hidden
            = f.input :beneficiaries_other, input_html: { class: 'large other uk-width-medium-1-1' }
            = f.error :beneficiaries_other, class: 'error-message other'

  - unless @profile.state == 'complete'
    = f.button :button, 'Next', class: 'uk-button uk-button-primary uk-margin-top uk-button-large uk-width-medium-1-2 uk-float-right', data: {disable_with: "<i style='color: #fff;' class='uk-icon uk-icon-circle-o-notch uk-icon-spin'></i><span style='color: #fff;'> That wasn't so bad...</span>"}
