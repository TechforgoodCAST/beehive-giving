= content_for :title, "Update #{@profile.year} profile"

= simple_form_for [@recipient, @profile], method: :patch, remote: true do |f|
  = f.hidden_field :year, value: Date.today.year.to_s
  = f.error :year, class: 'uk-text-small uk-text-warning'

  .uk-panel.uk-panel-box.uk-margin-bottom#panel.shadow
    .uk-form.uk-form-stacked
      %p.uk-text-large My organisation primarily benefits...
      .uk-width-1-1.uk-margin-small-top
        .uk-form-controls
          -# = f.association :beneficiaries, as: :check_boxes, collection: Beneficiary.where(category: 'Other'), label_method: :label, value_method: :id
          -# = f.error :beneficiaries, class: 'uk-text-small uk-text-warning'
          -# %span.checkbox
          -#   %label{:for => "people"}
          -#     %input#people.check_boxes.required{:name => "people", :type => "checkbox", :value => true} People
          -# .uk-width-1-1#hidden_questions.uk-hidden{style: 'border: 2px dashed #ccc; padding: 10px;'}

          .uk-width-1-1{style: 'background-color: #eee; padding: 7px;'}
            .uk-label People
            %small.uk-text-muted Select as many as applicable
            = f.association :beneficiaries, as: :check_boxes, collection: Beneficiary.order(:sort).where(category: 'People'), label_method: :label, value_method: :id
            = f.error :beneficiaries, class: 'uk-text-small uk-text-warning'
            .uk-grid
              .uk-width-medium-1-3.uk-margin-top
                %label.uk-form-label Gender
                .uk-form-controls
                  = f.input :gender, collection: Profile::GENDERS, input_html: { class: 'uk-width-1-1' }
                  = f.error :gender, class: 'uk-text-small uk-text-warning'
              .uk-width-medium-1-3.uk-margin-top
                %label.uk-form-label
                  Minimum age
                .uk-form-controls
                  = f.input :min_age, error: false, type: 'text', input_html: { class: 'uk-width-1-1', min: 0 }
                  = f.error :min_age, class: 'uk-text-small uk-text-warning'
              .uk-width-medium-1-3.uk-margin-top
                %label.uk-form-label
                  Maximum age
                .uk-form-controls
                  = f.input :max_age, error: false, type: 'text', input_html: { class: 'uk-width-1-1', min: 0 }
                  = f.error :max_age, class: 'uk-text-small uk-text-warning'

          .uk-width-1-1.uk-margin-top
            %a.uk-button.uk-button-small.more-options More options
            #more-beneficiary-options.uk-hidden
              %small.uk-text-muted Select as many as applicable
              = f.association :beneficiaries, as: :check_boxes, collection: Beneficiary.order(:sort).where(category: 'Other'), label_method: :label, value_method: :id

  .uk-panel.uk-panel-box.uk-margin-bottom#panel.shadow
    .uk-form.uk-form-stacked
      .uk-width-1-1
        .uk-alert
          %h4.uk-margin-remove Remember
          %p.uk-margin-remove The more specific you are, the more specific your results will be.
        %label.uk-form-label The countries where my organisation has impact...
        .uk-form-controls
          = f.association :countries, collection: Country.order('priority DESC'), input_html: {class: 'chosen-select'}
          = f.error :countries, class: 'uk-text-small uk-text-warning'
      .uk-width-1-1.uk-margin-top
        %label.uk-form-label The regions where my organisation has impact...
        .uk-form-controls
          = f.association :districts, collection: Country.includes(:districts), as: :grouped_select, group_method: :districts, label_method: :label, value_method: :id, input_html: {multiple: true, class: 'chosen-select'}
          = f.error :districts, class: 'uk-text-small uk-text-warning'
        %small.uk-text-muted This list will populate once you've selected some countries

  .uk-panel.uk-panel-box.uk-margin-bottom#panel.shadow
    .uk-form.uk-form-stacked
      .uk-alert
        %h4.uk-margin-remove Don't have exact figures?
        %p.uk-margin-remove Not a problem. Simply give an estimate, you can easily update them later on.
      .uk-grid
        .uk-width-large-1-3.uk-margin-bottom
          %label.uk-form-label No. of employees
          .uk-form-controls
            = f.input :staff_count, error: false, type: 'text', input_html: { class: 'uk-width-1-1', min: 0 }
            = f.error :staff_count, class: 'uk-text-small uk-text-warning'
        .uk-width-large-1-3.uk-margin-bottom
          %label.uk-form-label No. of volunteers
          .uk-form-controls
            = f.input :volunteer_count, type: 'text', input_html: { class: 'uk-width-1-1', min: 0 }
            = f.error :volunteer_count, class: 'uk-text-small uk-text-warning'
        .uk-width-large-1-3.uk-margin-bottom
          %label.uk-form-label No. of trustees
          .uk-form-controls
            = f.input :trustee_count, error: false, type: 'text', input_html: { class: 'uk-width-1-1', min: 0 }
            = f.error :trustee_count, class: 'uk-text-small uk-text-warning'
      .uk-width-medium-1-1
        %fieldset.uk-label Who implements your work?
        %small.uk-text-muted Select as many as applicable
        .uk-form-controls
          = f.association :implementors, as: :check_boxes, label_method: :label, value_method: :id
          = f.error :implementors, class: 'uk-text-small uk-text-warning'

  .uk-panel.uk-panel-box.uk-margin-bottom#panel.shadow
    .uk-form.uk-form-stacked
      .uk-width-1-1.uk-margin-bottom
        %fieldset.uk-label What does your organisation provide?
        %small.uk-text-muted Select as many as applicable
        .uk-form-controls
          = f.association :implementations, as: :check_boxes, label_method: :label, value_method: :id
          = f.error :implementations, class: 'uk-text-small uk-text-warning'
      .uk-width-medium-1-1.uk-margin-bottom
        %label.uk-form-label Do you receive financial payment (not donations) for your work?
        .uk-form-controls
          = f.input :does_sell, as: :radio_buttons, input_html: { class: 'uk-width-1-1' }
          = f.error :does_sell, class: 'uk-text-small uk-text-warning'
      .uk-width-1-1
        %label.uk-form-label How many beneficiaries has your work affected this year?
        .uk-grid
          .uk-width-medium-1-2
            .uk-form-controls
              = f.input :beneficiaries_count, input_html: { class: 'uk-width-1-1', style: 'width: 98%;' }
              = f.error :beneficiaries_count, class: 'uk-text-small uk-text-warning'
          .uk-form-controls.uk-display-block.uk-margin-small-top.boolean-padding
            = f.input :beneficiaries_count_actual, as: :boolean, checked_value: false, unchecked_value: true, inline_label: 'Are these estimated figures?'

  .uk-panel.uk-panel-box.uk-margin-bottom#panel.shadow
    .uk-form.uk-form-stacked
      .uk-width-1-1
        .uk-alert
          %h4.uk-margin-remove Don't have exact figures?
          %p.uk-margin-remove Not a problem. Simply give an estimate and check 'Are these estimated figures?'.
        .uk-width-1-1
          %label.uk-form-label
            Income in
            = @profile.year || get_year
        .uk-grid
          .uk-width-medium-1-2
            .uk-form-controls
              = f.input :income, as: :currency, input_html: { class: 'numeric integer', style: 'width: 94%;', min: 0 }, placeholder: 'e.g. 1234'
              = f.error :income, class: 'uk-text-small uk-text-warning'
          .uk-form-controls.uk-display-block.uk-margin-small-top.boolean-padding
            = f.input :income_actual, as: :boolean, checked_value: false, unchecked_value: true, inline_label: 'Are these estimated figures?'
        .uk-width-1-1.uk-margin-top
          %label.uk-form-label
            Expenditure in
            = @profile.year || get_year
          .uk-grid
            .uk-width-medium-1-2
              .uk-form-controls
                = f.input :expenditure, as: :currency, input_html: { class: 'numeric integer', style: 'width: 94%;', min: 0 }, placeholder: 'e.g. 2345'
                = f.error :expenditure, class: 'uk-text-small uk-text-warning'
            .uk-form-controls.uk-display-block.uk-margin-small-top.boolean-padding
              = f.input :expenditure_actual, as: :boolean, checked_value: false, unchecked_value: true, inline_label: 'Are these estimated figures?'

  = f.button :button, 'Update', class: 'uk-button uk-button-primary uk-width-1-1', style: 'color: #fff;', data: {disable_with: "<i style='color: #999;' class='uk-icon uk-icon-circle-o-notch uk-icon-spin'></i><span style='color: #999;'> Saving...</span>"}
